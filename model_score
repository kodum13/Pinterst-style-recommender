from keras.models import model_from_json
from pathlib import Path
from keras.preprocessing import image
import numpy as np
from keras.applications import vgg16
import pinterest_recs
from py3pin.Pinterest import Pinterest
import joblib

# Enter in your information for your Pinterest account
pinterest = Pinterest(email='your_email@gmail.com',
                      password='your_password',
                      username='your_username',
                      cred_root='cred_root')

boards = pinterest.boards()
# Put in the number for the board you want to get recommendations from
rec_board = boards[16]
rec_id = rec_board['id']

# Load the json file that contains the model's structure
f = Path("model_structure.json")
model_structure = f.read_text()

# Recreate the Keras model object from the json data
model = model_from_json(model_structure)

# Re-load the model's trained weights
model.load_weights("model_weights.h5")

# Path to folders with new recommendations
recs_path = Path("images") / "recs"

images = []
list_img = []
for pic in recs_path.glob("*.jpg"):
    list_img.append(pic)
    # Load an image file to test, resizing it to 64x64 pixels (as required by this model)
    img = image.load_img(pic, target_size=(64, 64))

    # Convert the image to a numpy array
    image_array = image.img_to_array(img)

    # Add the image to the list of images
    images.append(image_array)

# Normalize the data
images = np.array(images)
images = vgg16.preprocess_input(images)

feature_extraction_model = vgg16.VGG16(weights='imagenet', include_top=False, input_shape=(64, 64, 3))
features = feature_extraction_model.predict(images)

# Get the results in the form of predictions for which pins you will like
results = model.predict(features)
